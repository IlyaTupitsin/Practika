<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAADjsAAA47AAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAASAAAAEQAAABEAAAARAAAAEQAA
        ABEAAAARAAAAEQAAABEAAAARAAAAEQAAABEAAAARAAAAEQAAABEAAAARAAAAEQAAABEAAAARAAAAEQAA
        ABEAAAARAAAAEQAAABEAAAARAAAAEgAAAAYAAAAAAAAAAAAAAAAAAAABAAAAugAAAPcAAADsAAAA7gAA
        AO4AAADuAAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAAAO4AAADuAAAA7gAA
        AO4AAADuAAAA7gAAAO4AAADuAAAA7gAAAOwAAAD3AAAAugAAAAEAAAAAAAAAAAAAABEAAADvAAAA/wAA
        AP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAP8AAADvAAAAEQAAAAAAAAAAAAAAEQAA
        AO0AAAD/AAAA/QAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAA
        AP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD9AAAA/wAAAO0AAAARAAAAAAAA
        AAAAAAARAAAA7wAAAP8AAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAAD/AAAA7wAA
        ABEAAAAAAAAAAAAAABEAAADvAAAA/wAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAA
        AP8AAADvAAAAEQAAAAAAAAAAAAAAEQAAAO8AAAD/AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD+AAAA/wAAAO8AAAARAAAAAAAAAAAAAAARAAAA7wAAAP8AAAD+AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP4AAAD/AAAA7wAAABEAAAAAAAAAAAAAABEAAADvAAAA/wAAAP4AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAP8AAADvAAAAEQAAAAAAAAAAAAAAEQAAAO8AAAD/AAAA/gAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAAAO8AAAARAAAAAAAAAAAAAAARAAAA7wAA
        AP8AAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAAD/AAAA7wAAABEAAAAAAAAAAAAA
        ABEAAADvAAAA/wAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAP8AAADvAAAAEQAA
        AAAAAAAAAAAAEQAAAO8AAAD/AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAA
        AO8AAAARAAAAAAAAAAAAAAARAAAA7wAAAP8AAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP4AAAD/AAAA7wAAABEAAAAAAAAAAAAAABEAAADuAAAA/wAAAP0AAAD+AAAA/gAAAP4AAAD+AAAA/gAA
        AP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/gAA
        AP4AAAD+AAAA/QAAAP8AAADuAAAAEQAAAAAAAAAAAAAAEQAAAO8AAAD/AAAA/gAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD+AAAA/wAAAO8AAAARAAAAAAAAAAAAAAAQAAAA4AAAAPMAAADuAAAA7wAA
        AO8AAADuAAAA7QAAAO4AAADvAAAA7wAAAO4AAADtAAAA7gAAAO8AAADvAAAA7wAAAO4AAADtAAAA7gAA
        AO8AAADvAAAA7gAAAO0AAADuAAAA7wAAAO4AAADzAAAA4AAAABAAAAAAAAAAAAAAAAEAAAAMAAAADQAA
        AA0AAAANAAAADQAAAA4AAAASAAAAEQAAAA0AAAANAAAADgAAABIAAAARAAAADQAAAA0AAAANAAAADgAA
        ABIAAAARAAAADQAAAA0AAAAOAAAAEgAAABEAAAANAAAADQAAAA0AAAAMAAAAAQAAAAAAAAAAAAAAAQAA
        AAwAAAANAAAADQAAAA0AAAAOAAAACwAAAAAAAAAEAAAADQAAAA4AAAALAAAAAAAAAAQAAAAOAAAADQAA
        AA4AAAALAAAAAAAAAAQAAAANAAAADgAAAAsAAAAAAAAABAAAAA4AAAANAAAADQAAAAwAAAABAAAAAAAA
        AAAAAAAQAAAA4AAAAPMAAADuAAAA6wAAAP8AAABuAAAAAAAAAHIAAAD7AAAA/AAAAG4AAAAAAAAAcgAA
        AP8AAADnAAAA/wAAAG4AAAAAAAAAcgAAAPsAAAD8AAAAbgAAAAAAAABwAAAA/wAAAOoAAADzAAAA4AAA
        ABAAAAAAAAAAAAAAABEAAADvAAAA/wAAAP0AAAD/AAAA/AAAACkAAAAAAAAAwwAAAP8AAAD5AAAAKQAA
        AAAAAADEAAAA/wAAAP0AAAD8AAAAKQAAAAAAAADEAAAA/wAAAPkAAAApAAAAAAAAAMIAAAD/AAAA+wAA
        AP8AAADvAAAAEQAAAAAAAAAAAAAAEQAAAO4AAAD/AAAA+gAAAP8AAADCAAAAAAAAACgAAAD3AAAA/wAA
        AMIAAAAAAAAAKQAAAPoAAAD8AAAA/wAAAMIAAAAAAAAAKQAAAPcAAAD/AAAAwgAAAAAAAAAnAAAA+QAA
        AP8AAAD8AAAA/wAAAO4AAAARAAAAAAAAAAAAAAARAAAA7QAAAP8AAAD5AAAA/wAAAHUAAAAAAAAAdAAA
        AP8AAAD/AAAAdQAAAAAAAAB1AAAA/wAAAPYAAAD/AAAAdQAAAAAAAAB1AAAA/wAAAP8AAAB1AAAAAAAA
        AHMAAAD/AAAA+gAAAP0AAAD/AAAA7QAAABEAAAAAAAAAAAAAABEAAADvAAAA/wAAAP8AAAD7AAAAKAAA
        AAAAAADEAAAA/wAAAPgAAAAoAAAAAAAAAMYAAAD/AAAA/gAAAPsAAAAoAAAAAAAAAMUAAAD/AAAA+AAA
        ACgAAAAAAAAAxAAAAP8AAAD8AAAA/gAAAP8AAADvAAAAEQAAAAAAAAAAAAAAAQAAALoAAAD0AAAA9wAA
        ALkAAAAAAAAAIgAAAOgAAAD6AAAAuQAAAAAAAAAkAAAA6wAAAOwAAAD4AAAAuQAAAAAAAAAkAAAA6QAA
        APoAAAC5AAAAAAAAACIAAADqAAAA7wAAAO0AAADsAAAA9wAAALoAAAABAAAAAAAAAAAAAAAAAAAABgAA
        ABIAAAASAAAACwAAAAAAAAAHAAAAEwAAABIAAAALAAAAAAAAAAcAAAATAAAAEQAAABIAAAALAAAAAAAA
        AAcAAAATAAAAEgAAAAsAAAAAAAAABwAAABMAAAARAAAAEQAAABEAAAASAAAABgAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAABAAAAAQAAAAEAAAAAAAAAAAAAAAEAAAABAAAAAQAAAAAAAAAAAAAAAQAA
        AAEAAAABAAAAAQAAAAAAAAAAAAAAAQAAAAEAAAABAAAAAAAAAAAAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////0AAAAKX///pQAAAAoAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAA
        AAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgIQQgYCEEIGAhBCBgQghAYEI
        IQGBCCEBghBCAUIQQgKZSSlpQhBCAv////8=
</value>
  </data>
</root>